/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.nuamx.bus.message.vericlear;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class IloInstruction extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -2989936401084511433L;


  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"IloInstruction\",\"namespace\":\"com.nuamx.bus.message.vericlear\",\"fields\":[{\"name\":\"accountGroupCode\",\"type\":\"string\"},{\"name\":\"accountGroupCsdAccountCode\",\"type\":\"string\"},{\"name\":\"accountGroupType\",\"type\":\"string\"},{\"name\":\"accountId\",\"type\":\"string\"},{\"name\":\"assetKeySymbol\",\"type\":\"string\"},{\"name\":\"assetKeySymbolType\",\"type\":\"string\"},{\"name\":\"businessDate\",\"type\":\"string\"},{\"name\":\"ccpCode\",\"type\":\"string\"},{\"name\":\"clearingMemberCode\",\"type\":\"string\"},{\"name\":\"csdCode\",\"type\":\"string\"},{\"name\":\"csdParticipantCode\",\"type\":\"string\"},{\"name\":\"instructionId\",\"type\":\"int\"},{\"name\":\"instructionIdReference\",\"type\":\"int\"},{\"name\":\"instrument\",\"type\":{\"type\":\"record\",\"name\":\"Instrument\",\"namespace\":\"com.nuamx.bus.components\",\"fields\":[{\"name\":\"currencyAdjustment\",\"type\":[\"null\",{\"type\":\"enum\",\"name\":\"Currency\",\"namespace\":\"com.nuamx.bus.constants\",\"symbols\":[\"CLP\",\"COP\",\"PEN\",\"USD\",\"EURO\",\"UF\",\"IVP\"]}],\"default\":null},{\"name\":\"currencyIssue\",\"type\":[\"null\",\"com.nuamx.bus.constants.Currency\"],\"default\":null},{\"name\":\"exchange\",\"type\":{\"type\":\"enum\",\"name\":\"Exchange\",\"namespace\":\"com.nuamx.bus.constants\",\"symbols\":[\"NUAM\",\"XSGO\",\"XBVL\",\"XBVC\",\"XBCL\"]}},{\"name\":\"isin\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"securitySubType\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"securityType\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"symbol\",\"type\":\"string\"}]}},{\"name\":\"isBeneficialReady\",\"type\":\"boolean\"},{\"name\":\"lastUpdatedTimestamp\",\"type\":\"string\"},{\"name\":\"lastUpdatedUser\",\"type\":\"string\"},{\"name\":\"positionAccountCsdAccountCode\",\"type\":\"string\"},{\"name\":\"productCode\",\"type\":\"string\"},{\"name\":\"quantity\",\"type\":{\"type\":\"string\",\"java-class\":\"java.math.BigDecimal\"}},{\"name\":\"segmentCode\",\"type\":\"string\"},{\"name\":\"sequenceNumber\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"settledQuantity\",\"type\":{\"type\":\"string\",\"java-class\":\"java.math.BigDecimal\"}},{\"name\":\"settlementDate\",\"type\":\"string\"},{\"name\":\"settlementInstructionType\",\"type\":\"string\"},{\"name\":\"status\",\"type\":\"string\"},{\"name\":\"tradeDate\",\"type\":\"string\"},{\"name\":\"tradingMemberCode\",\"type\":\"string\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static final SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<IloInstruction> ENCODER =
      new BinaryMessageEncoder<>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<IloInstruction> DECODER =
      new BinaryMessageDecoder<>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<IloInstruction> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<IloInstruction> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<IloInstruction> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this IloInstruction to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a IloInstruction from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a IloInstruction instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static IloInstruction fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  private java.lang.CharSequence accountGroupCode;
  private java.lang.CharSequence accountGroupCsdAccountCode;
  private java.lang.CharSequence accountGroupType;
  private java.lang.CharSequence accountId;
  private java.lang.CharSequence assetKeySymbol;
  private java.lang.CharSequence assetKeySymbolType;
  private java.lang.CharSequence businessDate;
  private java.lang.CharSequence ccpCode;
  private java.lang.CharSequence clearingMemberCode;
  private java.lang.CharSequence csdCode;
  private java.lang.CharSequence csdParticipantCode;
  private int instructionId;
  private int instructionIdReference;
  private com.nuamx.bus.components.Instrument instrument;
  private boolean isBeneficialReady;
  private java.lang.CharSequence lastUpdatedTimestamp;
  private java.lang.CharSequence lastUpdatedUser;
  private java.lang.CharSequence positionAccountCsdAccountCode;
  private java.lang.CharSequence productCode;
  private java.math.BigDecimal quantity;
  private java.lang.CharSequence segmentCode;
  private java.lang.Integer sequenceNumber;
  private java.math.BigDecimal settledQuantity;
  private java.lang.CharSequence settlementDate;
  private java.lang.CharSequence settlementInstructionType;
  private java.lang.CharSequence status;
  private java.lang.CharSequence tradeDate;
  private java.lang.CharSequence tradingMemberCode;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public IloInstruction() {}

  /**
   * All-args constructor.
   * @param accountGroupCode The new value for accountGroupCode
   * @param accountGroupCsdAccountCode The new value for accountGroupCsdAccountCode
   * @param accountGroupType The new value for accountGroupType
   * @param accountId The new value for accountId
   * @param assetKeySymbol The new value for assetKeySymbol
   * @param assetKeySymbolType The new value for assetKeySymbolType
   * @param businessDate The new value for businessDate
   * @param ccpCode The new value for ccpCode
   * @param clearingMemberCode The new value for clearingMemberCode
   * @param csdCode The new value for csdCode
   * @param csdParticipantCode The new value for csdParticipantCode
   * @param instructionId The new value for instructionId
   * @param instructionIdReference The new value for instructionIdReference
   * @param instrument The new value for instrument
   * @param isBeneficialReady The new value for isBeneficialReady
   * @param lastUpdatedTimestamp The new value for lastUpdatedTimestamp
   * @param lastUpdatedUser The new value for lastUpdatedUser
   * @param positionAccountCsdAccountCode The new value for positionAccountCsdAccountCode
   * @param productCode The new value for productCode
   * @param quantity The new value for quantity
   * @param segmentCode The new value for segmentCode
   * @param sequenceNumber The new value for sequenceNumber
   * @param settledQuantity The new value for settledQuantity
   * @param settlementDate The new value for settlementDate
   * @param settlementInstructionType The new value for settlementInstructionType
   * @param status The new value for status
   * @param tradeDate The new value for tradeDate
   * @param tradingMemberCode The new value for tradingMemberCode
   */
  public IloInstruction(java.lang.CharSequence accountGroupCode, java.lang.CharSequence accountGroupCsdAccountCode, java.lang.CharSequence accountGroupType, java.lang.CharSequence accountId, java.lang.CharSequence assetKeySymbol, java.lang.CharSequence assetKeySymbolType, java.lang.CharSequence businessDate, java.lang.CharSequence ccpCode, java.lang.CharSequence clearingMemberCode, java.lang.CharSequence csdCode, java.lang.CharSequence csdParticipantCode, java.lang.Integer instructionId, java.lang.Integer instructionIdReference, com.nuamx.bus.components.Instrument instrument, java.lang.Boolean isBeneficialReady, java.lang.CharSequence lastUpdatedTimestamp, java.lang.CharSequence lastUpdatedUser, java.lang.CharSequence positionAccountCsdAccountCode, java.lang.CharSequence productCode, java.math.BigDecimal quantity, java.lang.CharSequence segmentCode, java.lang.Integer sequenceNumber, java.math.BigDecimal settledQuantity, java.lang.CharSequence settlementDate, java.lang.CharSequence settlementInstructionType, java.lang.CharSequence status, java.lang.CharSequence tradeDate, java.lang.CharSequence tradingMemberCode) {
    this.accountGroupCode = accountGroupCode;
    this.accountGroupCsdAccountCode = accountGroupCsdAccountCode;
    this.accountGroupType = accountGroupType;
    this.accountId = accountId;
    this.assetKeySymbol = assetKeySymbol;
    this.assetKeySymbolType = assetKeySymbolType;
    this.businessDate = businessDate;
    this.ccpCode = ccpCode;
    this.clearingMemberCode = clearingMemberCode;
    this.csdCode = csdCode;
    this.csdParticipantCode = csdParticipantCode;
    this.instructionId = instructionId;
    this.instructionIdReference = instructionIdReference;
    this.instrument = instrument;
    this.isBeneficialReady = isBeneficialReady;
    this.lastUpdatedTimestamp = lastUpdatedTimestamp;
    this.lastUpdatedUser = lastUpdatedUser;
    this.positionAccountCsdAccountCode = positionAccountCsdAccountCode;
    this.productCode = productCode;
    this.quantity = quantity;
    this.segmentCode = segmentCode;
    this.sequenceNumber = sequenceNumber;
    this.settledQuantity = settledQuantity;
    this.settlementDate = settlementDate;
    this.settlementInstructionType = settlementInstructionType;
    this.status = status;
    this.tradeDate = tradeDate;
    this.tradingMemberCode = tradingMemberCode;
  }

  @Override
  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }

  @Override
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }

  // Used by DatumWriter.  Applications should not call.
  @Override
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return accountGroupCode;
    case 1: return accountGroupCsdAccountCode;
    case 2: return accountGroupType;
    case 3: return accountId;
    case 4: return assetKeySymbol;
    case 5: return assetKeySymbolType;
    case 6: return businessDate;
    case 7: return ccpCode;
    case 8: return clearingMemberCode;
    case 9: return csdCode;
    case 10: return csdParticipantCode;
    case 11: return instructionId;
    case 12: return instructionIdReference;
    case 13: return instrument;
    case 14: return isBeneficialReady;
    case 15: return lastUpdatedTimestamp;
    case 16: return lastUpdatedUser;
    case 17: return positionAccountCsdAccountCode;
    case 18: return productCode;
    case 19: return quantity;
    case 20: return segmentCode;
    case 21: return sequenceNumber;
    case 22: return settledQuantity;
    case 23: return settlementDate;
    case 24: return settlementInstructionType;
    case 25: return status;
    case 26: return tradeDate;
    case 27: return tradingMemberCode;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @Override
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: accountGroupCode = (java.lang.CharSequence)value$; break;
    case 1: accountGroupCsdAccountCode = (java.lang.CharSequence)value$; break;
    case 2: accountGroupType = (java.lang.CharSequence)value$; break;
    case 3: accountId = (java.lang.CharSequence)value$; break;
    case 4: assetKeySymbol = (java.lang.CharSequence)value$; break;
    case 5: assetKeySymbolType = (java.lang.CharSequence)value$; break;
    case 6: businessDate = (java.lang.CharSequence)value$; break;
    case 7: ccpCode = (java.lang.CharSequence)value$; break;
    case 8: clearingMemberCode = (java.lang.CharSequence)value$; break;
    case 9: csdCode = (java.lang.CharSequence)value$; break;
    case 10: csdParticipantCode = (java.lang.CharSequence)value$; break;
    case 11: instructionId = (java.lang.Integer)value$; break;
    case 12: instructionIdReference = (java.lang.Integer)value$; break;
    case 13: instrument = (com.nuamx.bus.components.Instrument)value$; break;
    case 14: isBeneficialReady = (java.lang.Boolean)value$; break;
    case 15: lastUpdatedTimestamp = (java.lang.CharSequence)value$; break;
    case 16: lastUpdatedUser = (java.lang.CharSequence)value$; break;
    case 17: positionAccountCsdAccountCode = (java.lang.CharSequence)value$; break;
    case 18: productCode = (java.lang.CharSequence)value$; break;
    case 19: quantity = (java.math.BigDecimal)value$; break;
    case 20: segmentCode = (java.lang.CharSequence)value$; break;
    case 21: sequenceNumber = (java.lang.Integer)value$; break;
    case 22: settledQuantity = (java.math.BigDecimal)value$; break;
    case 23: settlementDate = (java.lang.CharSequence)value$; break;
    case 24: settlementInstructionType = (java.lang.CharSequence)value$; break;
    case 25: status = (java.lang.CharSequence)value$; break;
    case 26: tradeDate = (java.lang.CharSequence)value$; break;
    case 27: tradingMemberCode = (java.lang.CharSequence)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'accountGroupCode' field.
   * @return The value of the 'accountGroupCode' field.
   */
  public java.lang.CharSequence getAccountGroupCode() {
    return accountGroupCode;
  }


  /**
   * Sets the value of the 'accountGroupCode' field.
   * @param value the value to set.
   */
  public void setAccountGroupCode(java.lang.CharSequence value) {
    this.accountGroupCode = value;
  }

  /**
   * Gets the value of the 'accountGroupCsdAccountCode' field.
   * @return The value of the 'accountGroupCsdAccountCode' field.
   */
  public java.lang.CharSequence getAccountGroupCsdAccountCode() {
    return accountGroupCsdAccountCode;
  }


  /**
   * Sets the value of the 'accountGroupCsdAccountCode' field.
   * @param value the value to set.
   */
  public void setAccountGroupCsdAccountCode(java.lang.CharSequence value) {
    this.accountGroupCsdAccountCode = value;
  }

  /**
   * Gets the value of the 'accountGroupType' field.
   * @return The value of the 'accountGroupType' field.
   */
  public java.lang.CharSequence getAccountGroupType() {
    return accountGroupType;
  }


  /**
   * Sets the value of the 'accountGroupType' field.
   * @param value the value to set.
   */
  public void setAccountGroupType(java.lang.CharSequence value) {
    this.accountGroupType = value;
  }

  /**
   * Gets the value of the 'accountId' field.
   * @return The value of the 'accountId' field.
   */
  public java.lang.CharSequence getAccountId() {
    return accountId;
  }


  /**
   * Sets the value of the 'accountId' field.
   * @param value the value to set.
   */
  public void setAccountId(java.lang.CharSequence value) {
    this.accountId = value;
  }

  /**
   * Gets the value of the 'assetKeySymbol' field.
   * @return The value of the 'assetKeySymbol' field.
   */
  public java.lang.CharSequence getAssetKeySymbol() {
    return assetKeySymbol;
  }


  /**
   * Sets the value of the 'assetKeySymbol' field.
   * @param value the value to set.
   */
  public void setAssetKeySymbol(java.lang.CharSequence value) {
    this.assetKeySymbol = value;
  }

  /**
   * Gets the value of the 'assetKeySymbolType' field.
   * @return The value of the 'assetKeySymbolType' field.
   */
  public java.lang.CharSequence getAssetKeySymbolType() {
    return assetKeySymbolType;
  }


  /**
   * Sets the value of the 'assetKeySymbolType' field.
   * @param value the value to set.
   */
  public void setAssetKeySymbolType(java.lang.CharSequence value) {
    this.assetKeySymbolType = value;
  }

  /**
   * Gets the value of the 'businessDate' field.
   * @return The value of the 'businessDate' field.
   */
  public java.lang.CharSequence getBusinessDate() {
    return businessDate;
  }


  /**
   * Sets the value of the 'businessDate' field.
   * @param value the value to set.
   */
  public void setBusinessDate(java.lang.CharSequence value) {
    this.businessDate = value;
  }

  /**
   * Gets the value of the 'ccpCode' field.
   * @return The value of the 'ccpCode' field.
   */
  public java.lang.CharSequence getCcpCode() {
    return ccpCode;
  }


  /**
   * Sets the value of the 'ccpCode' field.
   * @param value the value to set.
   */
  public void setCcpCode(java.lang.CharSequence value) {
    this.ccpCode = value;
  }

  /**
   * Gets the value of the 'clearingMemberCode' field.
   * @return The value of the 'clearingMemberCode' field.
   */
  public java.lang.CharSequence getClearingMemberCode() {
    return clearingMemberCode;
  }


  /**
   * Sets the value of the 'clearingMemberCode' field.
   * @param value the value to set.
   */
  public void setClearingMemberCode(java.lang.CharSequence value) {
    this.clearingMemberCode = value;
  }

  /**
   * Gets the value of the 'csdCode' field.
   * @return The value of the 'csdCode' field.
   */
  public java.lang.CharSequence getCsdCode() {
    return csdCode;
  }


  /**
   * Sets the value of the 'csdCode' field.
   * @param value the value to set.
   */
  public void setCsdCode(java.lang.CharSequence value) {
    this.csdCode = value;
  }

  /**
   * Gets the value of the 'csdParticipantCode' field.
   * @return The value of the 'csdParticipantCode' field.
   */
  public java.lang.CharSequence getCsdParticipantCode() {
    return csdParticipantCode;
  }


  /**
   * Sets the value of the 'csdParticipantCode' field.
   * @param value the value to set.
   */
  public void setCsdParticipantCode(java.lang.CharSequence value) {
    this.csdParticipantCode = value;
  }

  /**
   * Gets the value of the 'instructionId' field.
   * @return The value of the 'instructionId' field.
   */
  public int getInstructionId() {
    return instructionId;
  }


  /**
   * Sets the value of the 'instructionId' field.
   * @param value the value to set.
   */
  public void setInstructionId(int value) {
    this.instructionId = value;
  }

  /**
   * Gets the value of the 'instructionIdReference' field.
   * @return The value of the 'instructionIdReference' field.
   */
  public int getInstructionIdReference() {
    return instructionIdReference;
  }


  /**
   * Sets the value of the 'instructionIdReference' field.
   * @param value the value to set.
   */
  public void setInstructionIdReference(int value) {
    this.instructionIdReference = value;
  }

  /**
   * Gets the value of the 'instrument' field.
   * @return The value of the 'instrument' field.
   */
  public com.nuamx.bus.components.Instrument getInstrument() {
    return instrument;
  }


  /**
   * Sets the value of the 'instrument' field.
   * @param value the value to set.
   */
  public void setInstrument(com.nuamx.bus.components.Instrument value) {
    this.instrument = value;
  }

  /**
   * Gets the value of the 'isBeneficialReady' field.
   * @return The value of the 'isBeneficialReady' field.
   */
  public boolean getIsBeneficialReady() {
    return isBeneficialReady;
  }


  /**
   * Sets the value of the 'isBeneficialReady' field.
   * @param value the value to set.
   */
  public void setIsBeneficialReady(boolean value) {
    this.isBeneficialReady = value;
  }

  /**
   * Gets the value of the 'lastUpdatedTimestamp' field.
   * @return The value of the 'lastUpdatedTimestamp' field.
   */
  public java.lang.CharSequence getLastUpdatedTimestamp() {
    return lastUpdatedTimestamp;
  }


  /**
   * Sets the value of the 'lastUpdatedTimestamp' field.
   * @param value the value to set.
   */
  public void setLastUpdatedTimestamp(java.lang.CharSequence value) {
    this.lastUpdatedTimestamp = value;
  }

  /**
   * Gets the value of the 'lastUpdatedUser' field.
   * @return The value of the 'lastUpdatedUser' field.
   */
  public java.lang.CharSequence getLastUpdatedUser() {
    return lastUpdatedUser;
  }


  /**
   * Sets the value of the 'lastUpdatedUser' field.
   * @param value the value to set.
   */
  public void setLastUpdatedUser(java.lang.CharSequence value) {
    this.lastUpdatedUser = value;
  }

  /**
   * Gets the value of the 'positionAccountCsdAccountCode' field.
   * @return The value of the 'positionAccountCsdAccountCode' field.
   */
  public java.lang.CharSequence getPositionAccountCsdAccountCode() {
    return positionAccountCsdAccountCode;
  }


  /**
   * Sets the value of the 'positionAccountCsdAccountCode' field.
   * @param value the value to set.
   */
  public void setPositionAccountCsdAccountCode(java.lang.CharSequence value) {
    this.positionAccountCsdAccountCode = value;
  }

  /**
   * Gets the value of the 'productCode' field.
   * @return The value of the 'productCode' field.
   */
  public java.lang.CharSequence getProductCode() {
    return productCode;
  }


  /**
   * Sets the value of the 'productCode' field.
   * @param value the value to set.
   */
  public void setProductCode(java.lang.CharSequence value) {
    this.productCode = value;
  }

  /**
   * Gets the value of the 'quantity' field.
   * @return The value of the 'quantity' field.
   */
  public java.math.BigDecimal getQuantity() {
    return quantity;
  }


  /**
   * Sets the value of the 'quantity' field.
   * @param value the value to set.
   */
  public void setQuantity(java.math.BigDecimal value) {
    this.quantity = value;
  }

  /**
   * Gets the value of the 'segmentCode' field.
   * @return The value of the 'segmentCode' field.
   */
  public java.lang.CharSequence getSegmentCode() {
    return segmentCode;
  }


  /**
   * Sets the value of the 'segmentCode' field.
   * @param value the value to set.
   */
  public void setSegmentCode(java.lang.CharSequence value) {
    this.segmentCode = value;
  }

  /**
   * Gets the value of the 'sequenceNumber' field.
   * @return The value of the 'sequenceNumber' field.
   */
  public java.lang.Integer getSequenceNumber() {
    return sequenceNumber;
  }


  /**
   * Sets the value of the 'sequenceNumber' field.
   * @param value the value to set.
   */
  public void setSequenceNumber(java.lang.Integer value) {
    this.sequenceNumber = value;
  }

  /**
   * Gets the value of the 'settledQuantity' field.
   * @return The value of the 'settledQuantity' field.
   */
  public java.math.BigDecimal getSettledQuantity() {
    return settledQuantity;
  }


  /**
   * Sets the value of the 'settledQuantity' field.
   * @param value the value to set.
   */
  public void setSettledQuantity(java.math.BigDecimal value) {
    this.settledQuantity = value;
  }

  /**
   * Gets the value of the 'settlementDate' field.
   * @return The value of the 'settlementDate' field.
   */
  public java.lang.CharSequence getSettlementDate() {
    return settlementDate;
  }


  /**
   * Sets the value of the 'settlementDate' field.
   * @param value the value to set.
   */
  public void setSettlementDate(java.lang.CharSequence value) {
    this.settlementDate = value;
  }

  /**
   * Gets the value of the 'settlementInstructionType' field.
   * @return The value of the 'settlementInstructionType' field.
   */
  public java.lang.CharSequence getSettlementInstructionType() {
    return settlementInstructionType;
  }


  /**
   * Sets the value of the 'settlementInstructionType' field.
   * @param value the value to set.
   */
  public void setSettlementInstructionType(java.lang.CharSequence value) {
    this.settlementInstructionType = value;
  }

  /**
   * Gets the value of the 'status' field.
   * @return The value of the 'status' field.
   */
  public java.lang.CharSequence getStatus() {
    return status;
  }


  /**
   * Sets the value of the 'status' field.
   * @param value the value to set.
   */
  public void setStatus(java.lang.CharSequence value) {
    this.status = value;
  }

  /**
   * Gets the value of the 'tradeDate' field.
   * @return The value of the 'tradeDate' field.
   */
  public java.lang.CharSequence getTradeDate() {
    return tradeDate;
  }


  /**
   * Sets the value of the 'tradeDate' field.
   * @param value the value to set.
   */
  public void setTradeDate(java.lang.CharSequence value) {
    this.tradeDate = value;
  }

  /**
   * Gets the value of the 'tradingMemberCode' field.
   * @return The value of the 'tradingMemberCode' field.
   */
  public java.lang.CharSequence getTradingMemberCode() {
    return tradingMemberCode;
  }


  /**
   * Sets the value of the 'tradingMemberCode' field.
   * @param value the value to set.
   */
  public void setTradingMemberCode(java.lang.CharSequence value) {
    this.tradingMemberCode = value;
  }

  /**
   * Creates a new IloInstruction RecordBuilder.
   * @return A new IloInstruction RecordBuilder
   */
  public static com.nuamx.bus.message.vericlear.IloInstruction.Builder newBuilder() {
    return new com.nuamx.bus.message.vericlear.IloInstruction.Builder();
  }

  /**
   * Creates a new IloInstruction RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new IloInstruction RecordBuilder
   */
  public static com.nuamx.bus.message.vericlear.IloInstruction.Builder newBuilder(com.nuamx.bus.message.vericlear.IloInstruction.Builder other) {
    if (other == null) {
      return new com.nuamx.bus.message.vericlear.IloInstruction.Builder();
    } else {
      return new com.nuamx.bus.message.vericlear.IloInstruction.Builder(other);
    }
  }

  /**
   * Creates a new IloInstruction RecordBuilder by copying an existing IloInstruction instance.
   * @param other The existing instance to copy.
   * @return A new IloInstruction RecordBuilder
   */
  public static com.nuamx.bus.message.vericlear.IloInstruction.Builder newBuilder(com.nuamx.bus.message.vericlear.IloInstruction other) {
    if (other == null) {
      return new com.nuamx.bus.message.vericlear.IloInstruction.Builder();
    } else {
      return new com.nuamx.bus.message.vericlear.IloInstruction.Builder(other);
    }
  }

  /**
   * RecordBuilder for IloInstruction instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<IloInstruction>
    implements org.apache.avro.data.RecordBuilder<IloInstruction> {

    private java.lang.CharSequence accountGroupCode;
    private java.lang.CharSequence accountGroupCsdAccountCode;
    private java.lang.CharSequence accountGroupType;
    private java.lang.CharSequence accountId;
    private java.lang.CharSequence assetKeySymbol;
    private java.lang.CharSequence assetKeySymbolType;
    private java.lang.CharSequence businessDate;
    private java.lang.CharSequence ccpCode;
    private java.lang.CharSequence clearingMemberCode;
    private java.lang.CharSequence csdCode;
    private java.lang.CharSequence csdParticipantCode;
    private int instructionId;
    private int instructionIdReference;
    private com.nuamx.bus.components.Instrument instrument;
    private com.nuamx.bus.components.Instrument.Builder instrumentBuilder;
    private boolean isBeneficialReady;
    private java.lang.CharSequence lastUpdatedTimestamp;
    private java.lang.CharSequence lastUpdatedUser;
    private java.lang.CharSequence positionAccountCsdAccountCode;
    private java.lang.CharSequence productCode;
    private java.math.BigDecimal quantity;
    private java.lang.CharSequence segmentCode;
    private java.lang.Integer sequenceNumber;
    private java.math.BigDecimal settledQuantity;
    private java.lang.CharSequence settlementDate;
    private java.lang.CharSequence settlementInstructionType;
    private java.lang.CharSequence status;
    private java.lang.CharSequence tradeDate;
    private java.lang.CharSequence tradingMemberCode;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$, MODEL$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.nuamx.bus.message.vericlear.IloInstruction.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.accountGroupCode)) {
        this.accountGroupCode = data().deepCopy(fields()[0].schema(), other.accountGroupCode);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.accountGroupCsdAccountCode)) {
        this.accountGroupCsdAccountCode = data().deepCopy(fields()[1].schema(), other.accountGroupCsdAccountCode);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.accountGroupType)) {
        this.accountGroupType = data().deepCopy(fields()[2].schema(), other.accountGroupType);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.accountId)) {
        this.accountId = data().deepCopy(fields()[3].schema(), other.accountId);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.assetKeySymbol)) {
        this.assetKeySymbol = data().deepCopy(fields()[4].schema(), other.assetKeySymbol);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.assetKeySymbolType)) {
        this.assetKeySymbolType = data().deepCopy(fields()[5].schema(), other.assetKeySymbolType);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.businessDate)) {
        this.businessDate = data().deepCopy(fields()[6].schema(), other.businessDate);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
      if (isValidValue(fields()[7], other.ccpCode)) {
        this.ccpCode = data().deepCopy(fields()[7].schema(), other.ccpCode);
        fieldSetFlags()[7] = other.fieldSetFlags()[7];
      }
      if (isValidValue(fields()[8], other.clearingMemberCode)) {
        this.clearingMemberCode = data().deepCopy(fields()[8].schema(), other.clearingMemberCode);
        fieldSetFlags()[8] = other.fieldSetFlags()[8];
      }
      if (isValidValue(fields()[9], other.csdCode)) {
        this.csdCode = data().deepCopy(fields()[9].schema(), other.csdCode);
        fieldSetFlags()[9] = other.fieldSetFlags()[9];
      }
      if (isValidValue(fields()[10], other.csdParticipantCode)) {
        this.csdParticipantCode = data().deepCopy(fields()[10].schema(), other.csdParticipantCode);
        fieldSetFlags()[10] = other.fieldSetFlags()[10];
      }
      if (isValidValue(fields()[11], other.instructionId)) {
        this.instructionId = data().deepCopy(fields()[11].schema(), other.instructionId);
        fieldSetFlags()[11] = other.fieldSetFlags()[11];
      }
      if (isValidValue(fields()[12], other.instructionIdReference)) {
        this.instructionIdReference = data().deepCopy(fields()[12].schema(), other.instructionIdReference);
        fieldSetFlags()[12] = other.fieldSetFlags()[12];
      }
      if (isValidValue(fields()[13], other.instrument)) {
        this.instrument = data().deepCopy(fields()[13].schema(), other.instrument);
        fieldSetFlags()[13] = other.fieldSetFlags()[13];
      }
      if (other.hasInstrumentBuilder()) {
        this.instrumentBuilder = com.nuamx.bus.components.Instrument.newBuilder(other.getInstrumentBuilder());
      }
      if (isValidValue(fields()[14], other.isBeneficialReady)) {
        this.isBeneficialReady = data().deepCopy(fields()[14].schema(), other.isBeneficialReady);
        fieldSetFlags()[14] = other.fieldSetFlags()[14];
      }
      if (isValidValue(fields()[15], other.lastUpdatedTimestamp)) {
        this.lastUpdatedTimestamp = data().deepCopy(fields()[15].schema(), other.lastUpdatedTimestamp);
        fieldSetFlags()[15] = other.fieldSetFlags()[15];
      }
      if (isValidValue(fields()[16], other.lastUpdatedUser)) {
        this.lastUpdatedUser = data().deepCopy(fields()[16].schema(), other.lastUpdatedUser);
        fieldSetFlags()[16] = other.fieldSetFlags()[16];
      }
      if (isValidValue(fields()[17], other.positionAccountCsdAccountCode)) {
        this.positionAccountCsdAccountCode = data().deepCopy(fields()[17].schema(), other.positionAccountCsdAccountCode);
        fieldSetFlags()[17] = other.fieldSetFlags()[17];
      }
      if (isValidValue(fields()[18], other.productCode)) {
        this.productCode = data().deepCopy(fields()[18].schema(), other.productCode);
        fieldSetFlags()[18] = other.fieldSetFlags()[18];
      }
      if (isValidValue(fields()[19], other.quantity)) {
        this.quantity = data().deepCopy(fields()[19].schema(), other.quantity);
        fieldSetFlags()[19] = other.fieldSetFlags()[19];
      }
      if (isValidValue(fields()[20], other.segmentCode)) {
        this.segmentCode = data().deepCopy(fields()[20].schema(), other.segmentCode);
        fieldSetFlags()[20] = other.fieldSetFlags()[20];
      }
      if (isValidValue(fields()[21], other.sequenceNumber)) {
        this.sequenceNumber = data().deepCopy(fields()[21].schema(), other.sequenceNumber);
        fieldSetFlags()[21] = other.fieldSetFlags()[21];
      }
      if (isValidValue(fields()[22], other.settledQuantity)) {
        this.settledQuantity = data().deepCopy(fields()[22].schema(), other.settledQuantity);
        fieldSetFlags()[22] = other.fieldSetFlags()[22];
      }
      if (isValidValue(fields()[23], other.settlementDate)) {
        this.settlementDate = data().deepCopy(fields()[23].schema(), other.settlementDate);
        fieldSetFlags()[23] = other.fieldSetFlags()[23];
      }
      if (isValidValue(fields()[24], other.settlementInstructionType)) {
        this.settlementInstructionType = data().deepCopy(fields()[24].schema(), other.settlementInstructionType);
        fieldSetFlags()[24] = other.fieldSetFlags()[24];
      }
      if (isValidValue(fields()[25], other.status)) {
        this.status = data().deepCopy(fields()[25].schema(), other.status);
        fieldSetFlags()[25] = other.fieldSetFlags()[25];
      }
      if (isValidValue(fields()[26], other.tradeDate)) {
        this.tradeDate = data().deepCopy(fields()[26].schema(), other.tradeDate);
        fieldSetFlags()[26] = other.fieldSetFlags()[26];
      }
      if (isValidValue(fields()[27], other.tradingMemberCode)) {
        this.tradingMemberCode = data().deepCopy(fields()[27].schema(), other.tradingMemberCode);
        fieldSetFlags()[27] = other.fieldSetFlags()[27];
      }
    }

    /**
     * Creates a Builder by copying an existing IloInstruction instance
     * @param other The existing instance to copy.
     */
    private Builder(com.nuamx.bus.message.vericlear.IloInstruction other) {
      super(SCHEMA$, MODEL$);
      if (isValidValue(fields()[0], other.accountGroupCode)) {
        this.accountGroupCode = data().deepCopy(fields()[0].schema(), other.accountGroupCode);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.accountGroupCsdAccountCode)) {
        this.accountGroupCsdAccountCode = data().deepCopy(fields()[1].schema(), other.accountGroupCsdAccountCode);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.accountGroupType)) {
        this.accountGroupType = data().deepCopy(fields()[2].schema(), other.accountGroupType);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.accountId)) {
        this.accountId = data().deepCopy(fields()[3].schema(), other.accountId);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.assetKeySymbol)) {
        this.assetKeySymbol = data().deepCopy(fields()[4].schema(), other.assetKeySymbol);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.assetKeySymbolType)) {
        this.assetKeySymbolType = data().deepCopy(fields()[5].schema(), other.assetKeySymbolType);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.businessDate)) {
        this.businessDate = data().deepCopy(fields()[6].schema(), other.businessDate);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.ccpCode)) {
        this.ccpCode = data().deepCopy(fields()[7].schema(), other.ccpCode);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.clearingMemberCode)) {
        this.clearingMemberCode = data().deepCopy(fields()[8].schema(), other.clearingMemberCode);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.csdCode)) {
        this.csdCode = data().deepCopy(fields()[9].schema(), other.csdCode);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.csdParticipantCode)) {
        this.csdParticipantCode = data().deepCopy(fields()[10].schema(), other.csdParticipantCode);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.instructionId)) {
        this.instructionId = data().deepCopy(fields()[11].schema(), other.instructionId);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.instructionIdReference)) {
        this.instructionIdReference = data().deepCopy(fields()[12].schema(), other.instructionIdReference);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.instrument)) {
        this.instrument = data().deepCopy(fields()[13].schema(), other.instrument);
        fieldSetFlags()[13] = true;
      }
      this.instrumentBuilder = null;
      if (isValidValue(fields()[14], other.isBeneficialReady)) {
        this.isBeneficialReady = data().deepCopy(fields()[14].schema(), other.isBeneficialReady);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.lastUpdatedTimestamp)) {
        this.lastUpdatedTimestamp = data().deepCopy(fields()[15].schema(), other.lastUpdatedTimestamp);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.lastUpdatedUser)) {
        this.lastUpdatedUser = data().deepCopy(fields()[16].schema(), other.lastUpdatedUser);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.positionAccountCsdAccountCode)) {
        this.positionAccountCsdAccountCode = data().deepCopy(fields()[17].schema(), other.positionAccountCsdAccountCode);
        fieldSetFlags()[17] = true;
      }
      if (isValidValue(fields()[18], other.productCode)) {
        this.productCode = data().deepCopy(fields()[18].schema(), other.productCode);
        fieldSetFlags()[18] = true;
      }
      if (isValidValue(fields()[19], other.quantity)) {
        this.quantity = data().deepCopy(fields()[19].schema(), other.quantity);
        fieldSetFlags()[19] = true;
      }
      if (isValidValue(fields()[20], other.segmentCode)) {
        this.segmentCode = data().deepCopy(fields()[20].schema(), other.segmentCode);
        fieldSetFlags()[20] = true;
      }
      if (isValidValue(fields()[21], other.sequenceNumber)) {
        this.sequenceNumber = data().deepCopy(fields()[21].schema(), other.sequenceNumber);
        fieldSetFlags()[21] = true;
      }
      if (isValidValue(fields()[22], other.settledQuantity)) {
        this.settledQuantity = data().deepCopy(fields()[22].schema(), other.settledQuantity);
        fieldSetFlags()[22] = true;
      }
      if (isValidValue(fields()[23], other.settlementDate)) {
        this.settlementDate = data().deepCopy(fields()[23].schema(), other.settlementDate);
        fieldSetFlags()[23] = true;
      }
      if (isValidValue(fields()[24], other.settlementInstructionType)) {
        this.settlementInstructionType = data().deepCopy(fields()[24].schema(), other.settlementInstructionType);
        fieldSetFlags()[24] = true;
      }
      if (isValidValue(fields()[25], other.status)) {
        this.status = data().deepCopy(fields()[25].schema(), other.status);
        fieldSetFlags()[25] = true;
      }
      if (isValidValue(fields()[26], other.tradeDate)) {
        this.tradeDate = data().deepCopy(fields()[26].schema(), other.tradeDate);
        fieldSetFlags()[26] = true;
      }
      if (isValidValue(fields()[27], other.tradingMemberCode)) {
        this.tradingMemberCode = data().deepCopy(fields()[27].schema(), other.tradingMemberCode);
        fieldSetFlags()[27] = true;
      }
    }

    /**
      * Gets the value of the 'accountGroupCode' field.
      * @return The value.
      */
    public java.lang.CharSequence getAccountGroupCode() {
      return accountGroupCode;
    }


    /**
      * Sets the value of the 'accountGroupCode' field.
      * @param value The value of 'accountGroupCode'.
      * @return This builder.
      */
    public com.nuamx.bus.message.vericlear.IloInstruction.Builder setAccountGroupCode(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.accountGroupCode = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'accountGroupCode' field has been set.
      * @return True if the 'accountGroupCode' field has been set, false otherwise.
      */
    public boolean hasAccountGroupCode() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'accountGroupCode' field.
      * @return This builder.
      */
    public com.nuamx.bus.message.vericlear.IloInstruction.Builder clearAccountGroupCode() {
      accountGroupCode = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'accountGroupCsdAccountCode' field.
      * @return The value.
      */
    public java.lang.CharSequence getAccountGroupCsdAccountCode() {
      return accountGroupCsdAccountCode;
    }


    /**
      * Sets the value of the 'accountGroupCsdAccountCode' field.
      * @param value The value of 'accountGroupCsdAccountCode'.
      * @return This builder.
      */
    public com.nuamx.bus.message.vericlear.IloInstruction.Builder setAccountGroupCsdAccountCode(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.accountGroupCsdAccountCode = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'accountGroupCsdAccountCode' field has been set.
      * @return True if the 'accountGroupCsdAccountCode' field has been set, false otherwise.
      */
    public boolean hasAccountGroupCsdAccountCode() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'accountGroupCsdAccountCode' field.
      * @return This builder.
      */
    public com.nuamx.bus.message.vericlear.IloInstruction.Builder clearAccountGroupCsdAccountCode() {
      accountGroupCsdAccountCode = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'accountGroupType' field.
      * @return The value.
      */
    public java.lang.CharSequence getAccountGroupType() {
      return accountGroupType;
    }


    /**
      * Sets the value of the 'accountGroupType' field.
      * @param value The value of 'accountGroupType'.
      * @return This builder.
      */
    public com.nuamx.bus.message.vericlear.IloInstruction.Builder setAccountGroupType(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.accountGroupType = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'accountGroupType' field has been set.
      * @return True if the 'accountGroupType' field has been set, false otherwise.
      */
    public boolean hasAccountGroupType() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'accountGroupType' field.
      * @return This builder.
      */
    public com.nuamx.bus.message.vericlear.IloInstruction.Builder clearAccountGroupType() {
      accountGroupType = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'accountId' field.
      * @return The value.
      */
    public java.lang.CharSequence getAccountId() {
      return accountId;
    }


    /**
      * Sets the value of the 'accountId' field.
      * @param value The value of 'accountId'.
      * @return This builder.
      */
    public com.nuamx.bus.message.vericlear.IloInstruction.Builder setAccountId(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.accountId = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'accountId' field has been set.
      * @return True if the 'accountId' field has been set, false otherwise.
      */
    public boolean hasAccountId() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'accountId' field.
      * @return This builder.
      */
    public com.nuamx.bus.message.vericlear.IloInstruction.Builder clearAccountId() {
      accountId = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'assetKeySymbol' field.
      * @return The value.
      */
    public java.lang.CharSequence getAssetKeySymbol() {
      return assetKeySymbol;
    }


    /**
      * Sets the value of the 'assetKeySymbol' field.
      * @param value The value of 'assetKeySymbol'.
      * @return This builder.
      */
    public com.nuamx.bus.message.vericlear.IloInstruction.Builder setAssetKeySymbol(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.assetKeySymbol = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'assetKeySymbol' field has been set.
      * @return True if the 'assetKeySymbol' field has been set, false otherwise.
      */
    public boolean hasAssetKeySymbol() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'assetKeySymbol' field.
      * @return This builder.
      */
    public com.nuamx.bus.message.vericlear.IloInstruction.Builder clearAssetKeySymbol() {
      assetKeySymbol = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'assetKeySymbolType' field.
      * @return The value.
      */
    public java.lang.CharSequence getAssetKeySymbolType() {
      return assetKeySymbolType;
    }


    /**
      * Sets the value of the 'assetKeySymbolType' field.
      * @param value The value of 'assetKeySymbolType'.
      * @return This builder.
      */
    public com.nuamx.bus.message.vericlear.IloInstruction.Builder setAssetKeySymbolType(java.lang.CharSequence value) {
      validate(fields()[5], value);
      this.assetKeySymbolType = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'assetKeySymbolType' field has been set.
      * @return True if the 'assetKeySymbolType' field has been set, false otherwise.
      */
    public boolean hasAssetKeySymbolType() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'assetKeySymbolType' field.
      * @return This builder.
      */
    public com.nuamx.bus.message.vericlear.IloInstruction.Builder clearAssetKeySymbolType() {
      assetKeySymbolType = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'businessDate' field.
      * @return The value.
      */
    public java.lang.CharSequence getBusinessDate() {
      return businessDate;
    }


    /**
      * Sets the value of the 'businessDate' field.
      * @param value The value of 'businessDate'.
      * @return This builder.
      */
    public com.nuamx.bus.message.vericlear.IloInstruction.Builder setBusinessDate(java.lang.CharSequence value) {
      validate(fields()[6], value);
      this.businessDate = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'businessDate' field has been set.
      * @return True if the 'businessDate' field has been set, false otherwise.
      */
    public boolean hasBusinessDate() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'businessDate' field.
      * @return This builder.
      */
    public com.nuamx.bus.message.vericlear.IloInstruction.Builder clearBusinessDate() {
      businessDate = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'ccpCode' field.
      * @return The value.
      */
    public java.lang.CharSequence getCcpCode() {
      return ccpCode;
    }


    /**
      * Sets the value of the 'ccpCode' field.
      * @param value The value of 'ccpCode'.
      * @return This builder.
      */
    public com.nuamx.bus.message.vericlear.IloInstruction.Builder setCcpCode(java.lang.CharSequence value) {
      validate(fields()[7], value);
      this.ccpCode = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'ccpCode' field has been set.
      * @return True if the 'ccpCode' field has been set, false otherwise.
      */
    public boolean hasCcpCode() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'ccpCode' field.
      * @return This builder.
      */
    public com.nuamx.bus.message.vericlear.IloInstruction.Builder clearCcpCode() {
      ccpCode = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'clearingMemberCode' field.
      * @return The value.
      */
    public java.lang.CharSequence getClearingMemberCode() {
      return clearingMemberCode;
    }


    /**
      * Sets the value of the 'clearingMemberCode' field.
      * @param value The value of 'clearingMemberCode'.
      * @return This builder.
      */
    public com.nuamx.bus.message.vericlear.IloInstruction.Builder setClearingMemberCode(java.lang.CharSequence value) {
      validate(fields()[8], value);
      this.clearingMemberCode = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'clearingMemberCode' field has been set.
      * @return True if the 'clearingMemberCode' field has been set, false otherwise.
      */
    public boolean hasClearingMemberCode() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'clearingMemberCode' field.
      * @return This builder.
      */
    public com.nuamx.bus.message.vericlear.IloInstruction.Builder clearClearingMemberCode() {
      clearingMemberCode = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'csdCode' field.
      * @return The value.
      */
    public java.lang.CharSequence getCsdCode() {
      return csdCode;
    }


    /**
      * Sets the value of the 'csdCode' field.
      * @param value The value of 'csdCode'.
      * @return This builder.
      */
    public com.nuamx.bus.message.vericlear.IloInstruction.Builder setCsdCode(java.lang.CharSequence value) {
      validate(fields()[9], value);
      this.csdCode = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'csdCode' field has been set.
      * @return True if the 'csdCode' field has been set, false otherwise.
      */
    public boolean hasCsdCode() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'csdCode' field.
      * @return This builder.
      */
    public com.nuamx.bus.message.vericlear.IloInstruction.Builder clearCsdCode() {
      csdCode = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'csdParticipantCode' field.
      * @return The value.
      */
    public java.lang.CharSequence getCsdParticipantCode() {
      return csdParticipantCode;
    }


    /**
      * Sets the value of the 'csdParticipantCode' field.
      * @param value The value of 'csdParticipantCode'.
      * @return This builder.
      */
    public com.nuamx.bus.message.vericlear.IloInstruction.Builder setCsdParticipantCode(java.lang.CharSequence value) {
      validate(fields()[10], value);
      this.csdParticipantCode = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'csdParticipantCode' field has been set.
      * @return True if the 'csdParticipantCode' field has been set, false otherwise.
      */
    public boolean hasCsdParticipantCode() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'csdParticipantCode' field.
      * @return This builder.
      */
    public com.nuamx.bus.message.vericlear.IloInstruction.Builder clearCsdParticipantCode() {
      csdParticipantCode = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'instructionId' field.
      * @return The value.
      */
    public int getInstructionId() {
      return instructionId;
    }


    /**
      * Sets the value of the 'instructionId' field.
      * @param value The value of 'instructionId'.
      * @return This builder.
      */
    public com.nuamx.bus.message.vericlear.IloInstruction.Builder setInstructionId(int value) {
      validate(fields()[11], value);
      this.instructionId = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'instructionId' field has been set.
      * @return True if the 'instructionId' field has been set, false otherwise.
      */
    public boolean hasInstructionId() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'instructionId' field.
      * @return This builder.
      */
    public com.nuamx.bus.message.vericlear.IloInstruction.Builder clearInstructionId() {
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
      * Gets the value of the 'instructionIdReference' field.
      * @return The value.
      */
    public int getInstructionIdReference() {
      return instructionIdReference;
    }


    /**
      * Sets the value of the 'instructionIdReference' field.
      * @param value The value of 'instructionIdReference'.
      * @return This builder.
      */
    public com.nuamx.bus.message.vericlear.IloInstruction.Builder setInstructionIdReference(int value) {
      validate(fields()[12], value);
      this.instructionIdReference = value;
      fieldSetFlags()[12] = true;
      return this;
    }

    /**
      * Checks whether the 'instructionIdReference' field has been set.
      * @return True if the 'instructionIdReference' field has been set, false otherwise.
      */
    public boolean hasInstructionIdReference() {
      return fieldSetFlags()[12];
    }


    /**
      * Clears the value of the 'instructionIdReference' field.
      * @return This builder.
      */
    public com.nuamx.bus.message.vericlear.IloInstruction.Builder clearInstructionIdReference() {
      fieldSetFlags()[12] = false;
      return this;
    }

    /**
      * Gets the value of the 'instrument' field.
      * @return The value.
      */
    public com.nuamx.bus.components.Instrument getInstrument() {
      return instrument;
    }


    /**
      * Sets the value of the 'instrument' field.
      * @param value The value of 'instrument'.
      * @return This builder.
      */
    public com.nuamx.bus.message.vericlear.IloInstruction.Builder setInstrument(com.nuamx.bus.components.Instrument value) {
      validate(fields()[13], value);
      this.instrumentBuilder = null;
      this.instrument = value;
      fieldSetFlags()[13] = true;
      return this;
    }

    /**
      * Checks whether the 'instrument' field has been set.
      * @return True if the 'instrument' field has been set, false otherwise.
      */
    public boolean hasInstrument() {
      return fieldSetFlags()[13];
    }

    /**
     * Gets the Builder instance for the 'instrument' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.nuamx.bus.components.Instrument.Builder getInstrumentBuilder() {
      if (instrumentBuilder == null) {
        if (hasInstrument()) {
          setInstrumentBuilder(com.nuamx.bus.components.Instrument.newBuilder(instrument));
        } else {
          setInstrumentBuilder(com.nuamx.bus.components.Instrument.newBuilder());
        }
      }
      return instrumentBuilder;
    }

    /**
     * Sets the Builder instance for the 'instrument' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public com.nuamx.bus.message.vericlear.IloInstruction.Builder setInstrumentBuilder(com.nuamx.bus.components.Instrument.Builder value) {
      clearInstrument();
      instrumentBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'instrument' field has an active Builder instance
     * @return True if the 'instrument' field has an active Builder instance
     */
    public boolean hasInstrumentBuilder() {
      return instrumentBuilder != null;
    }

    /**
      * Clears the value of the 'instrument' field.
      * @return This builder.
      */
    public com.nuamx.bus.message.vericlear.IloInstruction.Builder clearInstrument() {
      instrument = null;
      instrumentBuilder = null;
      fieldSetFlags()[13] = false;
      return this;
    }

    /**
      * Gets the value of the 'isBeneficialReady' field.
      * @return The value.
      */
    public boolean getIsBeneficialReady() {
      return isBeneficialReady;
    }


    /**
      * Sets the value of the 'isBeneficialReady' field.
      * @param value The value of 'isBeneficialReady'.
      * @return This builder.
      */
    public com.nuamx.bus.message.vericlear.IloInstruction.Builder setIsBeneficialReady(boolean value) {
      validate(fields()[14], value);
      this.isBeneficialReady = value;
      fieldSetFlags()[14] = true;
      return this;
    }

    /**
      * Checks whether the 'isBeneficialReady' field has been set.
      * @return True if the 'isBeneficialReady' field has been set, false otherwise.
      */
    public boolean hasIsBeneficialReady() {
      return fieldSetFlags()[14];
    }


    /**
      * Clears the value of the 'isBeneficialReady' field.
      * @return This builder.
      */
    public com.nuamx.bus.message.vericlear.IloInstruction.Builder clearIsBeneficialReady() {
      fieldSetFlags()[14] = false;
      return this;
    }

    /**
      * Gets the value of the 'lastUpdatedTimestamp' field.
      * @return The value.
      */
    public java.lang.CharSequence getLastUpdatedTimestamp() {
      return lastUpdatedTimestamp;
    }


    /**
      * Sets the value of the 'lastUpdatedTimestamp' field.
      * @param value The value of 'lastUpdatedTimestamp'.
      * @return This builder.
      */
    public com.nuamx.bus.message.vericlear.IloInstruction.Builder setLastUpdatedTimestamp(java.lang.CharSequence value) {
      validate(fields()[15], value);
      this.lastUpdatedTimestamp = value;
      fieldSetFlags()[15] = true;
      return this;
    }

    /**
      * Checks whether the 'lastUpdatedTimestamp' field has been set.
      * @return True if the 'lastUpdatedTimestamp' field has been set, false otherwise.
      */
    public boolean hasLastUpdatedTimestamp() {
      return fieldSetFlags()[15];
    }


    /**
      * Clears the value of the 'lastUpdatedTimestamp' field.
      * @return This builder.
      */
    public com.nuamx.bus.message.vericlear.IloInstruction.Builder clearLastUpdatedTimestamp() {
      lastUpdatedTimestamp = null;
      fieldSetFlags()[15] = false;
      return this;
    }

    /**
      * Gets the value of the 'lastUpdatedUser' field.
      * @return The value.
      */
    public java.lang.CharSequence getLastUpdatedUser() {
      return lastUpdatedUser;
    }


    /**
      * Sets the value of the 'lastUpdatedUser' field.
      * @param value The value of 'lastUpdatedUser'.
      * @return This builder.
      */
    public com.nuamx.bus.message.vericlear.IloInstruction.Builder setLastUpdatedUser(java.lang.CharSequence value) {
      validate(fields()[16], value);
      this.lastUpdatedUser = value;
      fieldSetFlags()[16] = true;
      return this;
    }

    /**
      * Checks whether the 'lastUpdatedUser' field has been set.
      * @return True if the 'lastUpdatedUser' field has been set, false otherwise.
      */
    public boolean hasLastUpdatedUser() {
      return fieldSetFlags()[16];
    }


    /**
      * Clears the value of the 'lastUpdatedUser' field.
      * @return This builder.
      */
    public com.nuamx.bus.message.vericlear.IloInstruction.Builder clearLastUpdatedUser() {
      lastUpdatedUser = null;
      fieldSetFlags()[16] = false;
      return this;
    }

    /**
      * Gets the value of the 'positionAccountCsdAccountCode' field.
      * @return The value.
      */
    public java.lang.CharSequence getPositionAccountCsdAccountCode() {
      return positionAccountCsdAccountCode;
    }


    /**
      * Sets the value of the 'positionAccountCsdAccountCode' field.
      * @param value The value of 'positionAccountCsdAccountCode'.
      * @return This builder.
      */
    public com.nuamx.bus.message.vericlear.IloInstruction.Builder setPositionAccountCsdAccountCode(java.lang.CharSequence value) {
      validate(fields()[17], value);
      this.positionAccountCsdAccountCode = value;
      fieldSetFlags()[17] = true;
      return this;
    }

    /**
      * Checks whether the 'positionAccountCsdAccountCode' field has been set.
      * @return True if the 'positionAccountCsdAccountCode' field has been set, false otherwise.
      */
    public boolean hasPositionAccountCsdAccountCode() {
      return fieldSetFlags()[17];
    }


    /**
      * Clears the value of the 'positionAccountCsdAccountCode' field.
      * @return This builder.
      */
    public com.nuamx.bus.message.vericlear.IloInstruction.Builder clearPositionAccountCsdAccountCode() {
      positionAccountCsdAccountCode = null;
      fieldSetFlags()[17] = false;
      return this;
    }

    /**
      * Gets the value of the 'productCode' field.
      * @return The value.
      */
    public java.lang.CharSequence getProductCode() {
      return productCode;
    }


    /**
      * Sets the value of the 'productCode' field.
      * @param value The value of 'productCode'.
      * @return This builder.
      */
    public com.nuamx.bus.message.vericlear.IloInstruction.Builder setProductCode(java.lang.CharSequence value) {
      validate(fields()[18], value);
      this.productCode = value;
      fieldSetFlags()[18] = true;
      return this;
    }

    /**
      * Checks whether the 'productCode' field has been set.
      * @return True if the 'productCode' field has been set, false otherwise.
      */
    public boolean hasProductCode() {
      return fieldSetFlags()[18];
    }


    /**
      * Clears the value of the 'productCode' field.
      * @return This builder.
      */
    public com.nuamx.bus.message.vericlear.IloInstruction.Builder clearProductCode() {
      productCode = null;
      fieldSetFlags()[18] = false;
      return this;
    }

    /**
      * Gets the value of the 'quantity' field.
      * @return The value.
      */
    public java.math.BigDecimal getQuantity() {
      return quantity;
    }


    /**
      * Sets the value of the 'quantity' field.
      * @param value The value of 'quantity'.
      * @return This builder.
      */
    public com.nuamx.bus.message.vericlear.IloInstruction.Builder setQuantity(java.math.BigDecimal value) {
      validate(fields()[19], value);
      this.quantity = value;
      fieldSetFlags()[19] = true;
      return this;
    }

    /**
      * Checks whether the 'quantity' field has been set.
      * @return True if the 'quantity' field has been set, false otherwise.
      */
    public boolean hasQuantity() {
      return fieldSetFlags()[19];
    }


    /**
      * Clears the value of the 'quantity' field.
      * @return This builder.
      */
    public com.nuamx.bus.message.vericlear.IloInstruction.Builder clearQuantity() {
      quantity = null;
      fieldSetFlags()[19] = false;
      return this;
    }

    /**
      * Gets the value of the 'segmentCode' field.
      * @return The value.
      */
    public java.lang.CharSequence getSegmentCode() {
      return segmentCode;
    }


    /**
      * Sets the value of the 'segmentCode' field.
      * @param value The value of 'segmentCode'.
      * @return This builder.
      */
    public com.nuamx.bus.message.vericlear.IloInstruction.Builder setSegmentCode(java.lang.CharSequence value) {
      validate(fields()[20], value);
      this.segmentCode = value;
      fieldSetFlags()[20] = true;
      return this;
    }

    /**
      * Checks whether the 'segmentCode' field has been set.
      * @return True if the 'segmentCode' field has been set, false otherwise.
      */
    public boolean hasSegmentCode() {
      return fieldSetFlags()[20];
    }


    /**
      * Clears the value of the 'segmentCode' field.
      * @return This builder.
      */
    public com.nuamx.bus.message.vericlear.IloInstruction.Builder clearSegmentCode() {
      segmentCode = null;
      fieldSetFlags()[20] = false;
      return this;
    }

    /**
      * Gets the value of the 'sequenceNumber' field.
      * @return The value.
      */
    public java.lang.Integer getSequenceNumber() {
      return sequenceNumber;
    }


    /**
      * Sets the value of the 'sequenceNumber' field.
      * @param value The value of 'sequenceNumber'.
      * @return This builder.
      */
    public com.nuamx.bus.message.vericlear.IloInstruction.Builder setSequenceNumber(java.lang.Integer value) {
      validate(fields()[21], value);
      this.sequenceNumber = value;
      fieldSetFlags()[21] = true;
      return this;
    }

    /**
      * Checks whether the 'sequenceNumber' field has been set.
      * @return True if the 'sequenceNumber' field has been set, false otherwise.
      */
    public boolean hasSequenceNumber() {
      return fieldSetFlags()[21];
    }


    /**
      * Clears the value of the 'sequenceNumber' field.
      * @return This builder.
      */
    public com.nuamx.bus.message.vericlear.IloInstruction.Builder clearSequenceNumber() {
      sequenceNumber = null;
      fieldSetFlags()[21] = false;
      return this;
    }

    /**
      * Gets the value of the 'settledQuantity' field.
      * @return The value.
      */
    public java.math.BigDecimal getSettledQuantity() {
      return settledQuantity;
    }


    /**
      * Sets the value of the 'settledQuantity' field.
      * @param value The value of 'settledQuantity'.
      * @return This builder.
      */
    public com.nuamx.bus.message.vericlear.IloInstruction.Builder setSettledQuantity(java.math.BigDecimal value) {
      validate(fields()[22], value);
      this.settledQuantity = value;
      fieldSetFlags()[22] = true;
      return this;
    }

    /**
      * Checks whether the 'settledQuantity' field has been set.
      * @return True if the 'settledQuantity' field has been set, false otherwise.
      */
    public boolean hasSettledQuantity() {
      return fieldSetFlags()[22];
    }


    /**
      * Clears the value of the 'settledQuantity' field.
      * @return This builder.
      */
    public com.nuamx.bus.message.vericlear.IloInstruction.Builder clearSettledQuantity() {
      settledQuantity = null;
      fieldSetFlags()[22] = false;
      return this;
    }

    /**
      * Gets the value of the 'settlementDate' field.
      * @return The value.
      */
    public java.lang.CharSequence getSettlementDate() {
      return settlementDate;
    }


    /**
      * Sets the value of the 'settlementDate' field.
      * @param value The value of 'settlementDate'.
      * @return This builder.
      */
    public com.nuamx.bus.message.vericlear.IloInstruction.Builder setSettlementDate(java.lang.CharSequence value) {
      validate(fields()[23], value);
      this.settlementDate = value;
      fieldSetFlags()[23] = true;
      return this;
    }

    /**
      * Checks whether the 'settlementDate' field has been set.
      * @return True if the 'settlementDate' field has been set, false otherwise.
      */
    public boolean hasSettlementDate() {
      return fieldSetFlags()[23];
    }


    /**
      * Clears the value of the 'settlementDate' field.
      * @return This builder.
      */
    public com.nuamx.bus.message.vericlear.IloInstruction.Builder clearSettlementDate() {
      settlementDate = null;
      fieldSetFlags()[23] = false;
      return this;
    }

    /**
      * Gets the value of the 'settlementInstructionType' field.
      * @return The value.
      */
    public java.lang.CharSequence getSettlementInstructionType() {
      return settlementInstructionType;
    }


    /**
      * Sets the value of the 'settlementInstructionType' field.
      * @param value The value of 'settlementInstructionType'.
      * @return This builder.
      */
    public com.nuamx.bus.message.vericlear.IloInstruction.Builder setSettlementInstructionType(java.lang.CharSequence value) {
      validate(fields()[24], value);
      this.settlementInstructionType = value;
      fieldSetFlags()[24] = true;
      return this;
    }

    /**
      * Checks whether the 'settlementInstructionType' field has been set.
      * @return True if the 'settlementInstructionType' field has been set, false otherwise.
      */
    public boolean hasSettlementInstructionType() {
      return fieldSetFlags()[24];
    }


    /**
      * Clears the value of the 'settlementInstructionType' field.
      * @return This builder.
      */
    public com.nuamx.bus.message.vericlear.IloInstruction.Builder clearSettlementInstructionType() {
      settlementInstructionType = null;
      fieldSetFlags()[24] = false;
      return this;
    }

    /**
      * Gets the value of the 'status' field.
      * @return The value.
      */
    public java.lang.CharSequence getStatus() {
      return status;
    }


    /**
      * Sets the value of the 'status' field.
      * @param value The value of 'status'.
      * @return This builder.
      */
    public com.nuamx.bus.message.vericlear.IloInstruction.Builder setStatus(java.lang.CharSequence value) {
      validate(fields()[25], value);
      this.status = value;
      fieldSetFlags()[25] = true;
      return this;
    }

    /**
      * Checks whether the 'status' field has been set.
      * @return True if the 'status' field has been set, false otherwise.
      */
    public boolean hasStatus() {
      return fieldSetFlags()[25];
    }


    /**
      * Clears the value of the 'status' field.
      * @return This builder.
      */
    public com.nuamx.bus.message.vericlear.IloInstruction.Builder clearStatus() {
      status = null;
      fieldSetFlags()[25] = false;
      return this;
    }

    /**
      * Gets the value of the 'tradeDate' field.
      * @return The value.
      */
    public java.lang.CharSequence getTradeDate() {
      return tradeDate;
    }


    /**
      * Sets the value of the 'tradeDate' field.
      * @param value The value of 'tradeDate'.
      * @return This builder.
      */
    public com.nuamx.bus.message.vericlear.IloInstruction.Builder setTradeDate(java.lang.CharSequence value) {
      validate(fields()[26], value);
      this.tradeDate = value;
      fieldSetFlags()[26] = true;
      return this;
    }

    /**
      * Checks whether the 'tradeDate' field has been set.
      * @return True if the 'tradeDate' field has been set, false otherwise.
      */
    public boolean hasTradeDate() {
      return fieldSetFlags()[26];
    }


    /**
      * Clears the value of the 'tradeDate' field.
      * @return This builder.
      */
    public com.nuamx.bus.message.vericlear.IloInstruction.Builder clearTradeDate() {
      tradeDate = null;
      fieldSetFlags()[26] = false;
      return this;
    }

    /**
      * Gets the value of the 'tradingMemberCode' field.
      * @return The value.
      */
    public java.lang.CharSequence getTradingMemberCode() {
      return tradingMemberCode;
    }


    /**
      * Sets the value of the 'tradingMemberCode' field.
      * @param value The value of 'tradingMemberCode'.
      * @return This builder.
      */
    public com.nuamx.bus.message.vericlear.IloInstruction.Builder setTradingMemberCode(java.lang.CharSequence value) {
      validate(fields()[27], value);
      this.tradingMemberCode = value;
      fieldSetFlags()[27] = true;
      return this;
    }

    /**
      * Checks whether the 'tradingMemberCode' field has been set.
      * @return True if the 'tradingMemberCode' field has been set, false otherwise.
      */
    public boolean hasTradingMemberCode() {
      return fieldSetFlags()[27];
    }


    /**
      * Clears the value of the 'tradingMemberCode' field.
      * @return This builder.
      */
    public com.nuamx.bus.message.vericlear.IloInstruction.Builder clearTradingMemberCode() {
      tradingMemberCode = null;
      fieldSetFlags()[27] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public IloInstruction build() {
      try {
        IloInstruction record = new IloInstruction();
        record.accountGroupCode = fieldSetFlags()[0] ? this.accountGroupCode : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.accountGroupCsdAccountCode = fieldSetFlags()[1] ? this.accountGroupCsdAccountCode : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.accountGroupType = fieldSetFlags()[2] ? this.accountGroupType : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.accountId = fieldSetFlags()[3] ? this.accountId : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.assetKeySymbol = fieldSetFlags()[4] ? this.assetKeySymbol : (java.lang.CharSequence) defaultValue(fields()[4]);
        record.assetKeySymbolType = fieldSetFlags()[5] ? this.assetKeySymbolType : (java.lang.CharSequence) defaultValue(fields()[5]);
        record.businessDate = fieldSetFlags()[6] ? this.businessDate : (java.lang.CharSequence) defaultValue(fields()[6]);
        record.ccpCode = fieldSetFlags()[7] ? this.ccpCode : (java.lang.CharSequence) defaultValue(fields()[7]);
        record.clearingMemberCode = fieldSetFlags()[8] ? this.clearingMemberCode : (java.lang.CharSequence) defaultValue(fields()[8]);
        record.csdCode = fieldSetFlags()[9] ? this.csdCode : (java.lang.CharSequence) defaultValue(fields()[9]);
        record.csdParticipantCode = fieldSetFlags()[10] ? this.csdParticipantCode : (java.lang.CharSequence) defaultValue(fields()[10]);
        record.instructionId = fieldSetFlags()[11] ? this.instructionId : (java.lang.Integer) defaultValue(fields()[11]);
        record.instructionIdReference = fieldSetFlags()[12] ? this.instructionIdReference : (java.lang.Integer) defaultValue(fields()[12]);
        if (instrumentBuilder != null) {
          try {
            record.instrument = this.instrumentBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("instrument"));
            throw e;
          }
        } else {
          record.instrument = fieldSetFlags()[13] ? this.instrument : (com.nuamx.bus.components.Instrument) defaultValue(fields()[13]);
        }
        record.isBeneficialReady = fieldSetFlags()[14] ? this.isBeneficialReady : (java.lang.Boolean) defaultValue(fields()[14]);
        record.lastUpdatedTimestamp = fieldSetFlags()[15] ? this.lastUpdatedTimestamp : (java.lang.CharSequence) defaultValue(fields()[15]);
        record.lastUpdatedUser = fieldSetFlags()[16] ? this.lastUpdatedUser : (java.lang.CharSequence) defaultValue(fields()[16]);
        record.positionAccountCsdAccountCode = fieldSetFlags()[17] ? this.positionAccountCsdAccountCode : (java.lang.CharSequence) defaultValue(fields()[17]);
        record.productCode = fieldSetFlags()[18] ? this.productCode : (java.lang.CharSequence) defaultValue(fields()[18]);
        record.quantity = fieldSetFlags()[19] ? this.quantity : (java.math.BigDecimal) defaultValue(fields()[19]);
        record.segmentCode = fieldSetFlags()[20] ? this.segmentCode : (java.lang.CharSequence) defaultValue(fields()[20]);
        record.sequenceNumber = fieldSetFlags()[21] ? this.sequenceNumber : (java.lang.Integer) defaultValue(fields()[21]);
        record.settledQuantity = fieldSetFlags()[22] ? this.settledQuantity : (java.math.BigDecimal) defaultValue(fields()[22]);
        record.settlementDate = fieldSetFlags()[23] ? this.settlementDate : (java.lang.CharSequence) defaultValue(fields()[23]);
        record.settlementInstructionType = fieldSetFlags()[24] ? this.settlementInstructionType : (java.lang.CharSequence) defaultValue(fields()[24]);
        record.status = fieldSetFlags()[25] ? this.status : (java.lang.CharSequence) defaultValue(fields()[25]);
        record.tradeDate = fieldSetFlags()[26] ? this.tradeDate : (java.lang.CharSequence) defaultValue(fields()[26]);
        record.tradingMemberCode = fieldSetFlags()[27] ? this.tradingMemberCode : (java.lang.CharSequence) defaultValue(fields()[27]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<IloInstruction>
    WRITER$ = (org.apache.avro.io.DatumWriter<IloInstruction>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<IloInstruction>
    READER$ = (org.apache.avro.io.DatumReader<IloInstruction>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    out.writeString(this.accountGroupCode);

    out.writeString(this.accountGroupCsdAccountCode);

    out.writeString(this.accountGroupType);

    out.writeString(this.accountId);

    out.writeString(this.assetKeySymbol);

    out.writeString(this.assetKeySymbolType);

    out.writeString(this.businessDate);

    out.writeString(this.ccpCode);

    out.writeString(this.clearingMemberCode);

    out.writeString(this.csdCode);

    out.writeString(this.csdParticipantCode);

    out.writeInt(this.instructionId);

    out.writeInt(this.instructionIdReference);

    this.instrument.customEncode(out);

    out.writeBoolean(this.isBeneficialReady);

    out.writeString(this.lastUpdatedTimestamp);

    out.writeString(this.lastUpdatedUser);

    out.writeString(this.positionAccountCsdAccountCode);

    out.writeString(this.productCode);

    out.writeString(this.quantity.toString());

    out.writeString(this.segmentCode);

    if (this.sequenceNumber == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeInt(this.sequenceNumber);
    }

    out.writeString(this.settledQuantity.toString());

    out.writeString(this.settlementDate);

    out.writeString(this.settlementInstructionType);

    out.writeString(this.status);

    out.writeString(this.tradeDate);

    out.writeString(this.tradingMemberCode);

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      this.accountGroupCode = in.readString(this.accountGroupCode instanceof Utf8 ? (Utf8)this.accountGroupCode : null);

      this.accountGroupCsdAccountCode = in.readString(this.accountGroupCsdAccountCode instanceof Utf8 ? (Utf8)this.accountGroupCsdAccountCode : null);

      this.accountGroupType = in.readString(this.accountGroupType instanceof Utf8 ? (Utf8)this.accountGroupType : null);

      this.accountId = in.readString(this.accountId instanceof Utf8 ? (Utf8)this.accountId : null);

      this.assetKeySymbol = in.readString(this.assetKeySymbol instanceof Utf8 ? (Utf8)this.assetKeySymbol : null);

      this.assetKeySymbolType = in.readString(this.assetKeySymbolType instanceof Utf8 ? (Utf8)this.assetKeySymbolType : null);

      this.businessDate = in.readString(this.businessDate instanceof Utf8 ? (Utf8)this.businessDate : null);

      this.ccpCode = in.readString(this.ccpCode instanceof Utf8 ? (Utf8)this.ccpCode : null);

      this.clearingMemberCode = in.readString(this.clearingMemberCode instanceof Utf8 ? (Utf8)this.clearingMemberCode : null);

      this.csdCode = in.readString(this.csdCode instanceof Utf8 ? (Utf8)this.csdCode : null);

      this.csdParticipantCode = in.readString(this.csdParticipantCode instanceof Utf8 ? (Utf8)this.csdParticipantCode : null);

      this.instructionId = in.readInt();

      this.instructionIdReference = in.readInt();

      if (this.instrument == null) {
        this.instrument = new com.nuamx.bus.components.Instrument();
      }
      this.instrument.customDecode(in);

      this.isBeneficialReady = in.readBoolean();

      this.lastUpdatedTimestamp = in.readString(this.lastUpdatedTimestamp instanceof Utf8 ? (Utf8)this.lastUpdatedTimestamp : null);

      this.lastUpdatedUser = in.readString(this.lastUpdatedUser instanceof Utf8 ? (Utf8)this.lastUpdatedUser : null);

      this.positionAccountCsdAccountCode = in.readString(this.positionAccountCsdAccountCode instanceof Utf8 ? (Utf8)this.positionAccountCsdAccountCode : null);

      this.productCode = in.readString(this.productCode instanceof Utf8 ? (Utf8)this.productCode : null);

      this.quantity = new java.math.BigDecimal(in.readString());

      this.segmentCode = in.readString(this.segmentCode instanceof Utf8 ? (Utf8)this.segmentCode : null);

      if (in.readIndex() != 1) {
        in.readNull();
        this.sequenceNumber = null;
      } else {
        this.sequenceNumber = in.readInt();
      }

      this.settledQuantity = new java.math.BigDecimal(in.readString());

      this.settlementDate = in.readString(this.settlementDate instanceof Utf8 ? (Utf8)this.settlementDate : null);

      this.settlementInstructionType = in.readString(this.settlementInstructionType instanceof Utf8 ? (Utf8)this.settlementInstructionType : null);

      this.status = in.readString(this.status instanceof Utf8 ? (Utf8)this.status : null);

      this.tradeDate = in.readString(this.tradeDate instanceof Utf8 ? (Utf8)this.tradeDate : null);

      this.tradingMemberCode = in.readString(this.tradingMemberCode instanceof Utf8 ? (Utf8)this.tradingMemberCode : null);

    } else {
      for (int i = 0; i < 28; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          this.accountGroupCode = in.readString(this.accountGroupCode instanceof Utf8 ? (Utf8)this.accountGroupCode : null);
          break;

        case 1:
          this.accountGroupCsdAccountCode = in.readString(this.accountGroupCsdAccountCode instanceof Utf8 ? (Utf8)this.accountGroupCsdAccountCode : null);
          break;

        case 2:
          this.accountGroupType = in.readString(this.accountGroupType instanceof Utf8 ? (Utf8)this.accountGroupType : null);
          break;

        case 3:
          this.accountId = in.readString(this.accountId instanceof Utf8 ? (Utf8)this.accountId : null);
          break;

        case 4:
          this.assetKeySymbol = in.readString(this.assetKeySymbol instanceof Utf8 ? (Utf8)this.assetKeySymbol : null);
          break;

        case 5:
          this.assetKeySymbolType = in.readString(this.assetKeySymbolType instanceof Utf8 ? (Utf8)this.assetKeySymbolType : null);
          break;

        case 6:
          this.businessDate = in.readString(this.businessDate instanceof Utf8 ? (Utf8)this.businessDate : null);
          break;

        case 7:
          this.ccpCode = in.readString(this.ccpCode instanceof Utf8 ? (Utf8)this.ccpCode : null);
          break;

        case 8:
          this.clearingMemberCode = in.readString(this.clearingMemberCode instanceof Utf8 ? (Utf8)this.clearingMemberCode : null);
          break;

        case 9:
          this.csdCode = in.readString(this.csdCode instanceof Utf8 ? (Utf8)this.csdCode : null);
          break;

        case 10:
          this.csdParticipantCode = in.readString(this.csdParticipantCode instanceof Utf8 ? (Utf8)this.csdParticipantCode : null);
          break;

        case 11:
          this.instructionId = in.readInt();
          break;

        case 12:
          this.instructionIdReference = in.readInt();
          break;

        case 13:
          if (this.instrument == null) {
            this.instrument = new com.nuamx.bus.components.Instrument();
          }
          this.instrument.customDecode(in);
          break;

        case 14:
          this.isBeneficialReady = in.readBoolean();
          break;

        case 15:
          this.lastUpdatedTimestamp = in.readString(this.lastUpdatedTimestamp instanceof Utf8 ? (Utf8)this.lastUpdatedTimestamp : null);
          break;

        case 16:
          this.lastUpdatedUser = in.readString(this.lastUpdatedUser instanceof Utf8 ? (Utf8)this.lastUpdatedUser : null);
          break;

        case 17:
          this.positionAccountCsdAccountCode = in.readString(this.positionAccountCsdAccountCode instanceof Utf8 ? (Utf8)this.positionAccountCsdAccountCode : null);
          break;

        case 18:
          this.productCode = in.readString(this.productCode instanceof Utf8 ? (Utf8)this.productCode : null);
          break;

        case 19:
          this.quantity = new java.math.BigDecimal(in.readString());
          break;

        case 20:
          this.segmentCode = in.readString(this.segmentCode instanceof Utf8 ? (Utf8)this.segmentCode : null);
          break;

        case 21:
          if (in.readIndex() != 1) {
            in.readNull();
            this.sequenceNumber = null;
          } else {
            this.sequenceNumber = in.readInt();
          }
          break;

        case 22:
          this.settledQuantity = new java.math.BigDecimal(in.readString());
          break;

        case 23:
          this.settlementDate = in.readString(this.settlementDate instanceof Utf8 ? (Utf8)this.settlementDate : null);
          break;

        case 24:
          this.settlementInstructionType = in.readString(this.settlementInstructionType instanceof Utf8 ? (Utf8)this.settlementInstructionType : null);
          break;

        case 25:
          this.status = in.readString(this.status instanceof Utf8 ? (Utf8)this.status : null);
          break;

        case 26:
          this.tradeDate = in.readString(this.tradeDate instanceof Utf8 ? (Utf8)this.tradeDate : null);
          break;

        case 27:
          this.tradingMemberCode = in.readString(this.tradingMemberCode instanceof Utf8 ? (Utf8)this.tradingMemberCode : null);
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










